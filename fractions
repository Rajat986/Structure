#include <stdio.h>
struct fraction
{
    int num,den;
};
struct fractions
{
    int n;
    struct fraction fractions[10];
};
struct answer
{
    int num,den;
};
struct answers
{
    struct answer answers[10];
};
struct fractions input()
{
    struct fractions fs;
    printf("Enter the number of fractions:");
    scanf("%d",&fs.n);
    for(int i=0;i<fs.n;i++)
    {
        printf("Enter the numerator[%d]:",i+1);
        scanf("%d",&fs.fractions[i].num);
        printf("Enter the denominator[%d]:",i+1);
        scanf("%d",&fs.fractions[i].den);
    }
    return fs;

}
struct fractions add(struct fractions fs)
{
    int s_n,s_d;
    s_n=(fs.fractions[0].num*fs.fractions[1].den)+(fs.fractions[1].num*fs.fractions[0].den);
    s_d=fs.fractions[0].den*fs.fractions[1].den;
    /*printf("S_N=%d\n",s_n);*/
    for(int i=2;i<fs.n;i++)
    {
        s_n=((s_n*fs.fractions[i].den)+(fs.fractions[i].num*s_d));
        s_d=s_d*(fs.fractions[i].den);
    }
    s_d=1;
    for(int i=0;i<fs.n;i++)
    {
        s_d=s_d*(fs.fractions[i].den);
    }

    fs.fractions[fs.n].num=s_n;
    fs.fractions[fs.n].den=s_d;
    return fs;
}

void display(struct fractions fs)
{
    for(int i=0;i<fs.n;i++)
    {
        printf("Fraction[%d]= %d/%d\n",i+1,fs.fractions[i].num,fs.fractions[i].den);
    }
    /*printf("Sum Num=%d\nSum Den=%d\n",fs.fractions[fs.n].num,fs.fractions[fs.n].den);*/
    printf("\nAnswer = %d/%d\n\n",fs.fractions[fs.n].num,fs.fractions[fs.n].den);
}

struct fractions reduce_ans(struct fractions fs)
{
    while(1)
    {
        for(int i=2;i<=13;i++)
        {
            while((fs.fractions[fs.n].num % i == 0) && (fs.fractions[fs.n].den % i == 0))
            {
                if((fs.fractions[fs.n].num % i == 0) && (fs.fractions[fs.n].den % i == 0))
                {
                    fs.fractions[fs.n].num = fs.fractions[fs.n].num / i;
                    fs.fractions[fs.n].den = fs.fractions[fs.n].den / i;
                }
            }
        }
        return fs;
    }
}

int main()
{
    struct fractions fs;
    fs=input();
    fs=add(fs);
    display(fs);
    fs=reduce_ans(fs);
    display(fs);
    return 0;
}
